<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Schoolman.Student.WenApi</name>
    </assembly>
    <members>
        <member name="T:Schoolman.Student.WenApi.Controllers.AccountController">
            <summary>
            Testing
            </summary>
        </member>
        <member name="M:Schoolman.Student.WenApi.Controllers.AccountController.Register(Schoolman.Student.Core.Application.Common.Models.UserRegisterModel)">
            <remarks>
            This action registers new user and sends confirmation email
            <br/><br/> 
            <b style="color: #f14d2f;align-contentalign-content:;" > 
            Password Must have:</b> <br/> <br/> 
            Digit (0123456789) <br/>
            Lowecase character (a-z) <br/>
            Uppercase character (A-Z) <br/>
            Non-Alphanumeric character (!@#$ ....) <br/>
            Length >=8 <br/>
            </remarks>
            <response code="200">Success request => New user registered and returned</response>
            <response code="400">Bad request. Cases: Email is not valid, Firstname or Lastname is empty, Password doesn't meet specified requirements and so on...</response>
        </member>
        <member name="M:Schoolman.Student.WenApi.Controllers.AccountController.Login(Schoolman.Student.WenApi.Controllers.LoginModel)">
            <remarks>
            This action returns access tokens (JWT + Refresh Token)
             <br/> <br/> 
            <b style="color: #f14d2f;align-contentalign-content: ;" > 
            Attention Attention</b> <br/> <br/> 
            User must be registered before Login <br/>
            </remarks>
            <response code="200">Success request => Access tokens created and returned</response>
            <response code="400">Bad request => Cases: User is not registered, Email is not valid, Password is not valid and so on...</response>
        </member>
        <member name="M:Schoolman.Student.WenApi.Controllers.AccountController.RefreshTokens(Schoolman.Student.WenApi.Controllers.Identity.DTO.TokenModel)">
            <remarks>
            This action take outdated tokens and returns new ones
            </remarks>
            <response code="200">Success request => New access tokens are returned</response>
            <response code="400">Bad request => Cases:Refresh token expired, JWT is not valid and so on...</response>
        </member>
        <member name="M:Schoolman.Student.WenApi.Controllers.AccountController.Confirm(System.String,System.String)">
            <remarks>
            This action confirms new user's email
            </remarks>
            <response code="200">Success request => Email confirmed</response>
            <response code="400">Bad request => Cases: userId or token are not valid </response>
        </member>
        <member name="T:Schoolman.Student.WenApi.Controllers.LoginModel">
            <summary>
            DTO
            </summary>
        </member>
        <member name="T:Schoolman.Student.WenApi.Controllers.Identity.DTO.TokenModel">
            <summary>
            DTO
            </summary>
        </member>
        <member name="T:Schoolman.Student.WenApi.Controllers.Identity.DTO.Response.BadRequestModel">
            <summary>
            DTO
            </summary>
        </member>
        <member name="P:Schoolman.Student.WenApi.Controllers.Identity.DTO.Response.BadRequestModel.Errors">
            <summary>
            
            </summary>
            <example> Email is invalid</example>
        </member>
        <member name="T:Schoolman.Student.WenApi.Controllers.LoginFail">
            <summary>
            DTO
            </summary>
        </member>
        <member name="P:Schoolman.Student.WenApi.Controllers.LoginFail.Errors">
            <example> User doesnt existt</example>
        </member>
        <member name="T:Schoolman.Student.WenApi.Controllers.LoginSuccess">
            <summary>
            DTO
            </summary>
        </member>
        <member name="P:Schoolman.Student.WenApi.Controllers.LoginSuccess.AccessToken">
            <example>eyJhb6IkpXVCJ9.eyJpc3MiOiJ0b3B0YWwuY29tIiwiZXhwIjAwLCJodHRwOi8vdG9wdGFsY2xhaW1zL2lzX2FkbWluIjp0cnVlLCJjb21wYW55IjoiVG9wdGFsIiwiYXdlc29tZSI6dHJ1ZX0.yRQYnWAQK_ZXw</example>
        </member>
        <member name="P:Schoolman.Student.WenApi.Controllers.LoginSuccess.RefreshToken">
            <example>6F9619FF-8B86-D011-B42D-00CF4FC964FF</example>
        </member>
        <member name="M:Schoolman.Student.WenApi.Controllers.Courses.UserController.GetAllUsersEmail">
            <remarks>
            <b style="color: #f14d2f;align-contentalign-content: ;" > 
            Attention Attention</b> <br/> <br/> 
            This action is temporary, and used for authorization testing. <br/> Designed for development mode <br/> <br/>
            <b>For authenticaticated users only</b>
            <br/> 
            So, if you have access tokens, you can get all registered emails
            </remarks>
            <returns></returns>
        </member>
    </members>
</doc>
